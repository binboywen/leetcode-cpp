class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int maxLength = 0;
        int leftIndex = 0;
        // 以s[i]结尾的不含重复字符的最长子串，找到重复的了，左边窗口就开始向右滑动
        // 最后不要忘记了以s[s.size() - 1]结尾的不含重复字符的最长子串
        for (int i = 0; i < s.size(); i++) {
            for (int innerIndex = leftIndex; innerIndex < i; innerIndex++) {
                if (s[i] == s[innerIndex]) {
                    maxLength = max(maxLength, i - leftIndex);
                    leftIndex = innerIndex + 1;
                    break;
                }
            }
        }
        return max(maxLength, int(s.size() - leftIndex));
    }
};

//runtime:8 ms
//memory:6.8 MB
