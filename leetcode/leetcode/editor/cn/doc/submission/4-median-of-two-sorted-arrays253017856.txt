#include <vector>
#include <algorithm>
using namespace std;
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int size = nums1.size() + nums2.size();
        vector<int> temp;
        int i = 0;
        int j = 0;
        while (i < nums1.size() || j < nums2.size()) {
            if(i == nums1.size() && j < nums2.size()) {
                temp.push_back(nums2[j++]);
                continue;
            }
            if (j == nums2.size() && i < nums1.size()) {
                temp.push_back(nums1[i++]);
                continue;
            }
            if (i < nums1.size() && j < nums2.size()) {
                if (nums1[i] <= nums2[j]) {
                    temp.push_back(nums1[i++]);
                } else {
                    temp.push_back(nums2[j++]);
                }
            }
        }
        if (size % 2 == 0) {
            return double((temp[(size - 1) / 2] + temp[size / 2]) / 2.0);
        } else {
            return double(temp[size / 2]);
        }
    }
};

//runtime:28 ms
//memory:87.6 MB
