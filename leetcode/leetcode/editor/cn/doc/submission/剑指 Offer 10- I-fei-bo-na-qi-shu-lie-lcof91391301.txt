class Solution {
    public int fib1(int n) {
        if(n == 0)
            return 0;
        if(n == 1)
            return 1;
        return fib(n-1) + fib(n-2);
    }
    public int fib2(int n) {
        if(n == 0)
            return 0;
        if(n == 1)
            return 1;
        int [] dp = new int[n + 1];
        dp[0] = 0;
        dp[1] = 1;
        for(int i = 2; i <= n; i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }
    public int fib(int n) {
        if(n == 0)
            return 0;
        if(n == 1)
            return 1;
        int front2 = 0;
        int front1 = 1;
        int result = 0;
        for(int i = 2; i <= n; i++){
            result = (front2 + front1) % 1000000007;
            front2 = front1;
            front1 = result;
        }
        return result;
    }
}
//runtime:0 ms
//memory:35.5 MB
