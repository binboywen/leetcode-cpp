class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int n = nums.size();
        if (n == 0) {
            return 0;
        }
        int fast = 1, slow = 1;
        while (fast < n) {
            if (nums[fast] != nums[fast - 1]) {
                nums[slow] = nums[fast];
                ++slow;
            }
            ++fast;
        }
        return slow;
    }
    int removeDuplicatesIter(vector<int>& nums) {
        if(nums.size() < 1){
            return 0;
        }
        auto iterPre = nums.begin();
        auto iter = iterPre + 1;
        while(iter != nums.end()){
            if(*iterPre == *iter){
                iter = nums.erase(iter);
            }else{
                iterPre = iter;
                iter++;
            }
        }
        return nums.size();
    }
};
//runtime:8 ms
//memory:13.1 MB
