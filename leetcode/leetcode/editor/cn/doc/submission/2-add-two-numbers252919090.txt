/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *result = new ListNode(0);
        int carry = 0;
        ListNode *p = l1;
        ListNode *q = l2;
        ListNode *cur = result;
        while (p != nullptr || q != nullptr) {
            int x = (p == nullptr) ? 0 : p->val;
            int y = (q == nullptr) ? 0 : q->val;
            int sum = carry + x + y;
            carry = sum / 10;
            cur->next = new ListNode(sum % 10);
            cur = cur->next;
            if (p != nullptr) {
                p = p->next;
            }
            if (q != nullptr) {
                q = q->next;
            }
        }
        if (carry != 0) {
            cur->next = new ListNode(carry);
        }
        return result->next;
    }
};

//runtime:32 ms
//memory:69.5 MB
