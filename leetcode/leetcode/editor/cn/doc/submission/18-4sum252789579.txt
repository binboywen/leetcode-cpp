class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        if (nums.size() < 4) {
            return res;
        }
        long long tmpSum = 0;
        sort(nums.begin(), nums.end());
        for (int i = 0; i <= nums.size() - 4; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            tmpSum = static_cast<long long>(nums[i]) + nums[i + 1] + nums[i + 2] + nums[i + 3];
            if (tmpSum > static_cast<long long>(target)) {
                break;
            }
            tmpSum = static_cast<long long>(nums[i]) + nums[nums.size() - 1] + nums[nums.size() - 2] + nums[nums.size() - 3];
            if (tmpSum < static_cast<long long>(target)) {
                continue;
            }
            for (int j = i + 1; j <= nums.size() - 3; j++) {
                if (j > i + 1 && nums[j] == nums[j -1]) {
                    continue;
                }
                tmpSum = static_cast<long long>(nums[i]) + nums[j] + nums[j + 1] + nums[j + 2];
                if (tmpSum > static_cast<long long>(target)) {
                    break;
                }
                tmpSum = static_cast<long long>(nums[i]) + nums[j] + nums[nums.size() -1] + nums[nums.size() - 2];
                if (tmpSum < static_cast<long long>(target)) {
                    continue;
                }
                int left = j + 1;
                int right = nums.size() - 1;
                while(left < right) {
                    long long sum = static_cast<long long>(nums[i]) + nums[j] + nums[left] + nums[right];
                    if (sum == static_cast<long long>(target)) {
                        res.push_back({nums[i], nums[j], nums[left], nums[right]});
                        while(left < right && nums[left] == nums[left + 1]) {
                            left++;
                        }
                        while(left < right && nums[right] == nums[right - 1]) {
                            right--;
                        }
                        left++;
                        right--;
                    } else if (sum < target) {
                        left++;
                    } else {
                        right--;
                    }
                }
            }
        }
        return res;
    }
};
//runtime:8 ms
//memory:12.8 MB
